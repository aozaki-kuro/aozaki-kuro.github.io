[{"categories":["Tech"],"content":"📢 IMPORTANT IF YOU HAVE ANY PROBLEMS, READ THE README.MD IN EVERY REPO FIRST. 🔨 Tool Preparation ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:0:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"📁 Download youtube-dl - general purpose video downloader [Github] streamlink - stream recording tool [Github] auto monitor-download script [Github] aria2 - download accelerating [Github] Stream Recorder - stream recording tool [Chrome Store] ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:1:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"📁 Processing ffmpeg [Github] [Guide Here] AtomicParsley [Github] ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:2:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"📁 Upload OneDriveUploader [Github] or Google Drive Sync [Github] rclone (optional) [Github] 🎬 Virtual Server Enviroment Preparation If you are using Windows 10 only, please check the Windows ver Guide. I’m running the jobs on Amazon Lightsail. Local environment is Windows 10 with WSL 2. Read the guide about how to install WSL 2: Link Preparing the environment is pretty much the same on the VPS and the WSL. I will be writing the preparation on the VPS. Generate a pair of SSH keys (if you do not know what it is, a password is okay). Create a VPS and upload your SSH public key. Connect to your VPS through SSH Update first sudo apt update sudo apt upgrade -y Run the script and it will setup the environment automatically. If you want to setup the environment manually, see below (I wish I know how to make a docker) sudo apt install python3 sudo apt install python3-pip sudo -H pip3 install --upgrade youtube-dl #sudo is required sudo -H pip3 install --upgrade streamlink sudo apt install ffmpeg sudo apt install atomicparsley sudo apt install aria2 ✨ Usage ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:3:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"🚩 Youtube-dl Should be the mostly used tool to download youtube-dl videos. Simple as it is. youtube-dl \"url\" But I prefer having it configured and accelarte the download with aria2. Here is my configuration: --external-downloader aria2c --external-downloader-args \"-x 16 -k 1M\" -o '/home/ubuntu/raw/(upload_date)s %(title)s.%(ext)s' --embed-thumbnail --format 'bestvideo[vcodec^=avc1]+bestaudio[ext=m4a]/best/mp4' --add-metadata --cookies '/home/ubuntu/cookies.txt' ※ Replace /home/ubuntu/ and /home/ubuntu/raw with your own working directories. Save it as youtube-dl.conf in e.g. /home/ubuntu/youtube-dl.conf. Then use sudo cp youtube-dl /etc/youtube-dl.conf to make it a system-wide config. Putting a --cookies cookies.txt option helps downloading the member-only contents. To get a cookies.txt using the plugin: [Chrome] [Firefox] Also, the config takes 3 times of writing files which might take longer. Wait patiently. Downloaded video and audio → Merged .mp4 file → Write metadata → Write thumbnail with AtomicParsley ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:4:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"🚩 Streamlink For No Archive streams youtube-dl doesn’t work. We should use streamlink instead. streamlink \"url\" best -o \"filename.ts\" # Name the filename as .ts, not .mp4 Streamlink works for niconico with options provided. streamlink \"url\" best -o \"filename.ts\" --niconico-email \"EMAIL\" --niconico-password \"PASSWORD\" For AbemaTV, streamlink also works. But somehow it’s a little bit slow. You can also use yuu instead [Github]. ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:5:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"🚩 Stream Recorder This is a plugin which can directly grab the stream. It did a great job in the SUISEI “POWER” LIVE. I successfully saved the live-record edition using this plugin. The details were written in the plugin, read before use, the plugin does not support encrypted HLS stream. You might have to refresh and grab for several times until you see the higher resolution. Be careful, don’t refresh the streaming page or the recording session will interupt. And it does not work with YouTube, so you still need streamlink. ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:6:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"🚩 Auto Monitor-Download Script It’s just a script, but the options are pretty complicated and was in Chinese so I will provide the lines I’m using. nohup record/record_new.sh youtube \"youtube_account_id\" -f best -l 10 -o \"auto_record\" -dt 1 \u0026 The -l is the looping option, means recheck the streaming status in every 10 seconds. I suggest having a dry run before running this. ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:7:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"☁ Uploading In this project I use OneDriveUploader since I stored everything in a 5TB OneDrive Business Account. wget https://raw.githubusercontent.com/MoeClub/OneList/master/OneDriveUploader/amd64/linux/OneDriveUploader -P /usr/local/bin/ sudo chmod a+rx /usr/local/bin/OneDriveUploader Once you are done you should test running the command to see if it’s taking effect. If you are using OneDrive for Business, click this link to get an url, then read below to start the config OneDriveUploader -a \"url\" #replace the url part e.g. Upload the raw folder to OneDrive root OneDriveUploader -s raw -r / # upload \"raw\" folder to the root You can use rclone instead if you want to, but it comsumes more memory and somehow complicated to config. So if you are going to use rclone, read the official guide carefully before processing. ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:8:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"📌 Tag a Thumbnail The only way to tag a thumbnail to .mp4 file is by using AtomicParsley. The process is like this Downloaded .ts file → Use ffmpeg to convert into .mp4 file → Write thumbnail with AtomicParsley This is how it works ffmpeg -i \"input.ts\" -vcodec copy \"output.mp4\" AtomicParsley \"output.mp4\" --artwork \"cover.jpg\" --overWrite 🤔 Tips \u0026 FAQs ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:9:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"⚠ OBS DON’T USE OBS TO RECORD THE SCREEN. No purpose doing this, if you have read the guide. Also OBS doesn’t work for DRM protected contents. ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:10:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"⚠ Running Tasks in the Background Processes will terminated if the network interrupt and logged out. So I suggest use nohup to keep it running, add an \u0026 to let the command run whatever happens. nohup youtube-dl \"url\" \u0026 If you want to check the output, you can use tail command. tail -l nohup.out Use Ctrl + C to terminate the command. To kill a process running in background ps aux | grep -i \"keyword\" kill \"process_id\" ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:11:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"⚠ Upper Case Be careful, commands in Ubuntu are case sensitive, if you cannot run the command please check. ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:12:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"⚠ Renaming I’m using Renamer.exe or modify the filename manually. I will write about the naming style: 20210120 【テトリス99】順位でガチャ配信の課金額が決まる⁉【ホロライブ _ 星街すいせい】.mp4 Delete the space between the date and the 【, preserve the space if there is no 【. Then delete the 【ホロライブ _ 星街すいせい】 part (I’m doing this recently to shorten the filename, avoid css style error in the archving site) The final output should be like this 20210120【テトリス99】順位でガチャ配信の課金額が決まる⁉.mp4 ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:13:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"⚠ Invalid file names OneDrive/Sharepoint has a strict file name requirement, but it’s basically the same as Windows 10. Do not use \" * : \u003c \u003e ? / \\ | File size limit is below 100GB The entire file path, including the file name, should be less than 400 characters See also: Invalid file names and file types in OneDrive and SharePoint - Microsoft If you are using rclone, the file will be auto renamed, see also Restricted filename characters - Rclone ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:14:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"⚠ YouTube Video Encoding FYI YouTube needs time to encode the archive after the stream ended. You can download with youtube-dl right after with 1 thread enabled. You can also wait for 30 minutes to serveral hours (depending on the length of the stream), when you see the comments and superchats are back, that means the archive has been encoded. At this point you can use youtube-dl along with aria2 to download much faster in 5~10 threads enabled. Also, if the stream is longer than 2 hours and you didn’t started recording it from the beginning, youtube-dl can just download the last 2 hours' part as soon as the stream ended. You have to wait until the whole archive finished encoding, then you can grab a intact archive. 🔰 Issues If you are having more questions, please open an issue using the [Question] template. ","date":"2021-01-25","objectID":"/2021/01/stream-archiving-eng/:15:0","tags":null,"title":"Brief Guide of Stream Archiving","uri":"/2021/01/stream-archiving-eng/"},{"categories":["Tech"],"content":"求人不如求己，仓鼠症患者的自我救赎","date":"2020-11-24","objectID":"/2020/11/stream-archiving/","tags":["仓鼠症","网络"],"title":"直播存档的自用方案","uri":"/2020/11/stream-archiving/"},{"categories":["Tech"],"content":"起因 自从Hololive 7月版权事件造成旗下VTuber大量视频遭到隐藏，Suisei Channel也并不能幸免。甚至包括早期大量杂谈及歌回视频也遭到隐藏。 雪上加霜的是，先前仰赖的直播存档站于2020-10-31宣布进入只读状态，不再写入新的直播存档，导致一时间难以应对。 此外，2020-11-23星街的歌回疑似再次因为唱了米津玄師的感電，导致存档暂时隐藏，截至2020-11-24 09:00 UTC+8，存档尚未恢复，仰仗他人保住了存档。 因此痛定思痛，准备了一些方案应对将来可能出现的不留档等问题。 ","date":"2020-11-24","objectID":"/2020/11/stream-archiving/:1:0","tags":["仓鼠症","网络"],"title":"直播存档的自用方案","uri":"/2020/11/stream-archiving/"},{"categories":["Tech"],"content":"解决方案 由于我并没有太多程序基础，也没有太多精力去折腾一整套的云端存档方案，因此整体暂时以Windows的本地操作为主。 Youtube-dl \u003e\u003e 项目主页点此 大名鼎鼎的youtube-dl，可以说是各类视频站批量存储的最佳方案，有名到甚至吃了RIAA的DMCA Takedown，不过在折腾之后Github恢复了项目1。 Windows环境下配置文件在%APPDATA%\\youtube-dl\\config.txt或C:\\Users\\\u003cuser name\u003e\\youtube-dl.conf，配置好后即可用 youtube-dl 'stream-address' 贴一下我的配置文件： --external-downloader aria2c --external-downloader-args \"--all-proxy=http://127.0.0.1:7890 -x 16 -k 1M\" -o 'C:/Users/\u003cusername\u003e/Downloads/%(title)s.%(ext)s' --format 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio/best' --cookies 'C:/Users/\u003cusername\u003e/Downloads/youtube-dl/cookies.txt' --embed-thumbnail --add-metadata 这里需要用到的依赖包括aria2c, ffmpeg, atomicparsely, beautifulsoup4 优点 批量操作，可对整个频道的视频/播放列表进行拉取 支持多种视频站点（具体参考项目主页说明） 更新快，能够很好应对YouTube的频繁改动 缺点： 只能单线程下载，待YouTube转码完成后才能利用aria2c进行多线程下载 必须在直播结束后才能进行下载 youtube-dl尽管解决了批量下载的问题，但是没有解决直播时直接对串流进行保存的问题。由于星街的歌回通常是留档的，因此以前都没有太多研究。在遭遇到2020-11-23直播存档神隐后这一需求自然也提上了议事日程。 Streamlink \u003e\u003e 项目主页点此 又一个大名鼎鼎的项目，原本常用于将直播串流至本地播放器播放，不过查阅文档后发现，streamlink同样具有输出至文件的能力。 我通过chocolatey安装后，开箱即用。 streamlink 'stream-address' best -o 'outputfile' 本地环境测试通过，并无明显的卡顿。依照项目说法，它甚至支持nicolive以及nicolive timeshift；但根据既往经验，nicolive对于多设备登录并不友好，所以是否应当使用该项目对接下来的付费Live进行保存，这点需要进一步验证。 此外，niconico录制需登录参数： --niconico-email 'EMAIL' --niconico-password 'PASSWORD' Stream Recorder \u003e\u003e 插件地址点此 一个直接从浏览器内即可捕获直播流的插件。目前使用感良好，包括截存nicolive并未引发登录冲突的问题。 2020-11-23 日清主办的SUISEI “POWER” LIVE中这个插件大显身手，甚至在浏览器播放卡顿时依然能够顺畅完整录下全部影像。 所有人都没想到日清的直播站点发布的直播存档，最后输出的影像不仅色域出错，并且音质及码率遭到不同程度劣化，对于观感影响明显。完全一时兴起对全场串流进行保存的我手里的存档成了整个discord服务器的希望… 唯一问题，不能用于YouTube直播串流保存，因此仍然需要streamlink。 ","date":"2020-11-24","objectID":"/2020/11/stream-archiving/:2:0","tags":["仓鼠症","网络"],"title":"直播存档的自用方案","uri":"/2020/11/stream-archiving/"},{"categories":["Tech"],"content":"To-Do List 由于这些方案目前均是基于本地运行的，自动化程度非常低，且存在遗漏风险、占用本地带宽、卡顿造成串流失败等等问题。因此仍有非常大的改进空间。 目标： 将串流存取操作挪至云端，不影响本地观看 自动监测直播及投稿，及时启动下载 自动将完成串流的影像转存至OneDrive等网盘进行归档 目前看中了Amazon Lightsail的3.5 USD/month方案，另一方面正在查看是否有全套的监测、录制、上传至网盘的方案，如果有更新，会追加在后面。 事件全貌及Github的回应：https://github.blog/2020-11-16-standing-up-for-developers-youtube-dl-is-back/ ↩︎ ","date":"2020-11-24","objectID":"/2020/11/stream-archiving/:3:0","tags":["仓鼠症","网络"],"title":"直播存档的自用方案","uri":"/2020/11/stream-archiving/"},{"categories":["Life"],"content":"当个器材党真开心","date":"2020-10-27","objectID":"/2020/10/leica-m10-r/","tags":["生活","摄影"],"title":"圆了徕卡梦","uri":"/2020/10/leica-m10-r/"},{"categories":["Life"],"content":"作为“资深”器材党，一直以来徕卡就仿佛遥不可及的梦，久久萦绕在我心头。 这两年由于家母也燃起了摄影之魂，于是变成与家母一起烧摄影器材和拍照了。由于今年疫情原因，国外旅行计划全数取消，自然是多出了非常多资金来购买摄影器材。在我的撺掇之下，家母与我一起出资购买了LEICA M10-R和两枚镜头。 Leica M10-RLeica M10-R \" Leica M10-R LEICA M10-R Black Chrome Finish LEICA SUMMILUX-M 35mm f/1.4 ASPH FLE (11663) LEICA SUMMILUX-M 50mm f/1.4 ASPH (11891) TECHART LM-EA7 Artisan \u0026 Artist ACAM-313N Professional Silk Hand Strap Kontice Order Made EPSOM Leather Case 选择M10-R的理由，除了是今年新发售的机身，更新的CMOS以及更高的像素都为创作提供了巨大的空间。尤其是不用再特意担心高感问题。尽管个人对那个高调的可乐标不甚满意，但是再那么大创作空间面前便是选择了妥协。 主要考虑到手中还有A7R3，所以同时购买了天工LM-EA7自动对焦环以将M头转接至A7R3上。当然不得不说这也是一个国产黑科技，不大的接环实现了M头的自动对焦，甚至可以通过二次转接盘活更多型号的老旧手动对焦头。 LEICA SUMMILUX-M 35mm f/1.4 ASPH FLE (11663)Leica M10-R \" LEICA SUMMILUX-M 35mm f/1.4 ASPH FLE (11663) 而11663和11891自不必多说。徕卡的35mm、50mm是各种意义上的看家焦段，而这两枚现行版镜头也是拥有着极佳素质。之前曾经考虑过是否要去淘一支11874双非，不过最后在“买新不买旧”的原则面前败退下来了。而11891拿到后立刻转接至A7m3上拍摄了上面这张照片。尽管100%放大后，11891的16岁高龄的光学设计已然难以喂饱A7R3和M10-R这两块4000万级别的CMOS，但是这又何妨呢？稍微缩一缩图，这画面依然油润又不失锐利。 在背带方面纠结了很久，一方面是在AA真丝系列高昂的价格面前略有迟疑，另一方面，手中仿制AA的登山绳背带在M10-R的实际使用中只让我觉得碍事。于是最后选定了ACAM-313N这根真丝腕带，一方面不破坏原有握持感，另一方面也是因为它较为年轻的红黑配色，非常有特色。 皮套来自于Kontice Leather。由于是黑色机身，填写定制订单时便想着要保持低调，所以面料选择了EPSOM掌纹，并且要求制成底部可换电池的版本。皮套到手后便感受到了与普通皮料截然不同的手感和做工，确实非常对得起它高昂的价格，并且与机身浑然天成。 只是才拿到机器不久，片子还不多。今后有更新的话会直接放在Portfolio栏目下。不过首先会将以往的片子逐渐整理出来，算是对2014年至今自己拍摄的一个总结，并且希望能开启新的风格。 ","date":"2020-10-27","objectID":"/2020/10/leica-m10-r/:0:0","tags":["生活","摄影"],"title":"圆了徕卡梦","uri":"/2020/10/leica-m10-r/"},{"categories":["VTuber"],"content":"倒点黑泥","date":"2020-10-19","objectID":"/2020/10/a-tragedy-for-everyone/","tags":["生活","VTuber"],"title":"一出闹剧，一出悲剧","uri":"/2020/10/a-tragedy-for-everyone/"},{"categories":["VTuber"],"content":"注意：本文含有主观判断，还有傲慢与偏见 在早两个月的博文中我不吝于展现我对VirtualYouTuber这一新产业的兴趣，以及对某位VTuber的喜爱。 在这期间也有一位VTuber在视频中展示了一张来自Reddit的Meme，大致意思是在2020年那么多灾难与冲突（包括但不限于COVID-19、政治风波、极端右翼抬头）的背景下，仍然还可以安心看看Hololive等VTuber。当时大家都抱持有一个愿望，认为至少“二次元”仍然是一个远离尘世的理想乡，可以在这里逃避一下现实。 只是在这位主播不慎1踩中zh_CN的红线后，这个美好的愿景迅速破灭。一直到今天凌晨，Bilibili的相关本地化小组（字幕组）相继宣布无限期停止活动/解散，这大半个月见证了一出闹剧，一出悲剧。 本博认为，尽管Cover Corp的运营和公关水平确实堪忧，但这恐怕不是根本原因。通过此事还是看出了更多人性的问题，并印证了既往对全球右倾的忧虑。 我出生在最自由的年代。 我依然相信人类能建成地球村。 我潸然泪下。 关于这位主播是否有主观成分有较多不同看法，本博无从隔着屏幕知人心，故对此抱中立态度。 ↩︎ ","date":"2020-10-19","objectID":"/2020/10/a-tragedy-for-everyone/:0:0","tags":["生活","VTuber"],"title":"一出闹剧，一出悲剧","uri":"/2020/10/a-tragedy-for-everyone/"},{"categories":["Reading"],"content":"天久鷹央の推理カルテ，医生写的推理小说","date":"2020-10-10","objectID":"/2020/10/ameku-takao-no-suiri-karute/","tags":["生活","阅读"],"title":"读到一套挺有意思的医疗推理小说","uri":"/2020/10/ameku-takao-no-suiri-karute/"},{"categories":["Reading"],"content":"注意：本文含有剧透 手里这套医疗推理小说是新潮文库nex推出的「天久鷹央」系列（天久鷹央の推理カルテ、天久鷹央の事件カルテ），目前共计10册，我目前读到第3册。作者是知念実希人，毕业于東京慈恵会医科大学，本业是一名内科医生。虽然平时一直说看病就像是在探案：层层抽丝剥茧、寻找证据、最后抓出病源、得出诊断，但是一直苦于没有相应的文笔和精力将自己的经历写成小说。加之这套小说的封绘由いとうのいぢ（伊东杂音）老师绘制，作为十来年前就看伊东老师插画/人设长大的老腊肉，自然是不愿意错过这套小说的。 就前两册而言，自己作为一名内科医生，确实体会到了与“侦探”斗智的快乐。尽管不像在临床上那样，可以亲眼看病人、问病史、读病历、看化验、做查体、请会诊等等，内科医生出身的作者还是将大部分需要告知读者的点写了出来，并在大部分的故事中可以推导得出诊断。这是一种比较新奇的体验，除开平日工作中一直在经历的缜密探索，第一次体验了“从文字间拼凑还原事实并理出真相”的感觉。应该还是得益于作者本身就是医生的缘故，对于诊疗情节的刻画、信息的排布掌握得不错，并且释放了不少烟雾弹，反而会对医疗专业读者形成迷惑。 最有成就感的一部分是第一册的最后一个故事「オーダーメイドの毒薬」。这个故事中，不仅与前几章寥寥几句话带过的一眼诊断出的维生素A过量串起来，并且最后的谜题也非常的难。卡马西平与西柚的致命组合尽管被我思索后迅速看破，但如果没有相应的用药经验，没有看过药品说明书或做过相关研究，根本无从知晓这是一个强力的CYP3A4抑制剂，进而引发故事中的情节。 稍有可惜的地方，就是有些病例太过简单了。例如第二册的第一个故事「甘い毒」，开篇就看得出患者体型肥胖、嗜糖，并且可以总结出明确的Whipple三联征，也就是可以基本诊断胰岛细胞瘤。所以对于医疗专业读者来说，小说的故事有时却又未免太简单了点。因此我也比较好奇，这些故事对于非医学专业读者来说，又是怎么读、怎么思考的呢？ 此外，也有非常想吐槽的、关于专业性地方。其一，第一册的第三个故事「不可視の胎児」就明显没有好好做查体，患者腹痛来诊竟然没有做腹部查体，到最后才想起来做B超时似乎有异常腹膜刺激征，并拖到了宫外孕大出血抢救及紧急手术，如果这是在国内，早就因为误诊、漏诊，构成医疗事故并上法庭了。其二，第二册最后一个故事，尽管非常感人，但是情节和编排仍然较为牵强。除了缺少病房平面图，无从知晓病房间的空间关系，最后的谜底竟然是患儿偷摸进护士台偷取三磷酸腺苷二钠（ATP）这样的高危药品！高危药品根据国内规定，有严格的保存、使用前后查对及存量清点流程，怎可是这么一个重大事故！尽管明白小说需要夸大一些情节、制造一些意外，但小说中的一些细节，还是让我对日本的医疗专业性和制度，产生了些许怀疑……不知道现实中的日本医院，是否也是这么的不专业？ 总而言之，本小说目前至第二册可以打7/10分，不知道近两年的作品是否会更缜密和有趣？读完后会继续更新。 ","date":"2020-10-10","objectID":"/2020/10/ameku-takao-no-suiri-karute/:0:0","tags":["生活","阅读"],"title":"读到一套挺有意思的医疗推理小说","uri":"/2020/10/ameku-takao-no-suiri-karute/"},{"categories":["VTuber"],"content":"花开堪折直须折，莫待无花空折枝。","date":"2020-08-23","objectID":"/2020/08/watching-virtual-youtuber-vtuber/","tags":["生活","VTuber"],"title":"我在看Virtual YouTuber","uri":"/2020/08/watching-virtual-youtuber-vtuber/"},{"categories":["VTuber"],"content":"注意 本文含有大量主观判断、私人观点、不理智行为，小心星咏者.jpg 虚拟YouTuber（日语：バーチャルユーチューバー，英语：Virtual YouTuber，也缩写为VTuber）是以YouTube为平台进行影片直播和投稿的虚拟偶像，在YouTube以外的平台中又被称作虚拟主播。 ————WikiPedia 了解我的朋友可能知道，除了纸片人以外我通常不怎么追星。在此我要向各位致歉，我确实还是在追星的，也毫不避讳看VTuber甚至打SC（Super Chat）也是一种追星。 仔细数数，看VTuber时间恐怕也要2年有余了，看了业界潮起潮落，也想把自己一路上的体验记录一下。 ","date":"2020-08-23","objectID":"/2020/08/watching-virtual-youtuber-vtuber/:0:0","tags":["生活","VTuber"],"title":"我在看Virtual YouTuber","uri":"/2020/08/watching-virtual-youtuber-vtuber/"},{"categories":["VTuber"],"content":"前奏 一切的起点Kizuna AI \" 一切的起点 如果要说VTuber业界的鼻祖，那自然是絆愛（Kizuna AI1）。自称AI的人物、3D全身动捕的视频当时可谓是极其轰动，我当然也加入了观众的行列。早期絆愛的视频处处透露着一股可爱的傻气，和自称AI形成了相当反差，被观众戏称为“人工智障”。当然还有玩Bio7的视频里出现的著名「花Q！花Q 花Q！」2。VTuber的出现，大大降低了中之人（背后的声优）形象的要求，从而让更多的人能够进入这一行业。只是后续我因为学业问题，没有继续太多看VTuber，再回来时已经时风起云涌，进入2018年的战国时代。 ","date":"2020-08-23","objectID":"/2020/08/watching-virtual-youtuber-vtuber/:1:0","tags":["生活","VTuber"],"title":"我在看Virtual YouTuber","uri":"/2020/08/watching-virtual-youtuber-vtuber/"},{"categories":["VTuber"],"content":"初识 除了戒酒什么都会的紫色小矮子妈妈你喜欢吗Rindou Mikoto \" 除了戒酒什么都会的紫色小矮子妈妈你喜欢吗 2018年中在朋友的推荐下看了竜胆尊的频道，此时已经从老爱的视频势时代转向了直播势时代。相对成本低廉但看起来更精致的Live 2D取代了全3D动捕，降低了整体业界门槛，让更多新生力量得以进驻这一行业。在这段时期里我时不时会上来看一下尊妈的直播或录播，最吸引我的莫过于第二次歌回时唱的恐山・ル・ヴォワール3、平时一些色色的发言，还有不俗的剪辑力（初期有不少视频是自己制作的，例如这首 Bad ∞ End ∞ Night）。当时对VTuber逐渐开始感兴趣，并一直看到了2019年的年初，可以说是“再次”初识了吧。 ","date":"2020-08-23","objectID":"/2020/08/watching-virtual-youtuber-vtuber/:2:0","tags":["生活","VTuber"],"title":"我在看Virtual YouTuber","uri":"/2020/08/watching-virtual-youtuber-vtuber/"},{"categories":["VTuber"],"content":"别离 蒼い蝶（illust @_ShinH）Sougetsu Eli 1 \" 蒼い蝶（illust @_ShinH） 当时从尊妈频道得知了HoneyStrap这一组合，除了“头牌”周防パトラ以外，机缘巧合下发现了蒼月エリ（@Eli_HNST 🥀💎）。当时最吸引我的正是她一边喝着啤酒，一边弹着吉他唱歌。稍稍沙哑的嗓音，配着温柔的吉他，在那之后伴我度过了许许多多不眠之夜。加之她有时会在一大早发布短视频假装女友喊起床，节假日也会有类似的短视频发布，可以说是真的太像一个温柔的邻家女孩了。而且Eli有基本的基本的乐理知识，唱功可能属于当时VTuber业界一线的水平4。 然而，天有不测风云，也没有不散的筵席。 晴天霹雳Sougetsu Eli 2 \" 晴天霹雳 在经历数次收益化回收后，Eli在5月19日突然宣布即将引退的消息5。在此之前，Eli刚刚换上新衣服，还在Minecraft里一边继续建造她的小小火柴盒，一边和观众吹水，仿佛所有冒险都还在继续。 连尚在奋战舰C活动的爽哥听闻此事后也突然失去了斗志6。 爽哥哭泣Sougetsu Eli 3 \" 爽哥哭泣 无论Eli引退后是去做什么，都希望她一切顺利，希望苍之蝶可以越飞越远。 话是这么说，但因为突如其来的别离，严重打击了我继续看VTuber的动力，同时也突然有点理解为什么自己喜欢的偶像毕业时会如此难过。 在那之后，有大半年没有勇气再点开Youtube上的相关频道。 ","date":"2020-08-23","objectID":"/2020/08/watching-virtual-youtuber-vtuber/:3:0","tags":["生活","VTuber"],"title":"我在看Virtual YouTuber","uri":"/2020/08/watching-virtual-youtuber-vtuber/"},{"categories":["VTuber"],"content":"再会 2020年初突如其来的COVID-19疫情让全世界措手不及，隔离措施把大部分人都摁在了家里。商场、酒吧、电影院、演唱会等等人群密集场所纷纷暂停营业，一切娱乐转线上。VTuber业界再次乘着东风而起，SC总量达到了非常可观的量。其中走了全世界路线的Hololive收获了来自日本、中国、欧美DD们的大量SC，成功包揽了上半年的SC总量前十7。 2020年上半年VTuber收到的SC总量SC SUM \" 2020年上半年VTuber收到的SC总量 在这么多VTuber中，我最喜欢的应当是3月时意外发现的星街すいせい8，尤其了解到她一路以来的经历，更是感动。 星街すいせい，正统idol路线（大概）Hoshimachi Suisei 1 \" 星街すいせい，正统idol路线（大概） 2018年3月18日，星街すいせい Twitter账号发送第一条推文，标志着活动开始。在此之后她一直以个人势活动。设计了自己的形象、制作Live 2D、制作自己翻唱视频…等等等等，以至于被中国观众称为“六边形战士”，也足以见得个人势活动时期到底有多艰难。 后来参加了Hololive的甄选，尽管被拒绝一次后仍然不放弃，再次面谈后进入了子品牌INNK Music。但是在INNK Music的经历不甚愉快，几乎被扔在冷宫里，一直到2019年12月1日转入Hololive，作为直属艺人活动（通称0期生），也换装了由手島nari老师绘制的新Live 2D形象，演唱时一度哽咽（当然观众眼里也进了彗星）。 此外她也是业界非常少见的带着形象和原先账号加入企业的VTuber之一，在此之前是加入偶像部的もこ田めめめ9，通常代表着相当过硬的业务能力。 手島nari老师绘制的新形象，保留了很多旧形象的特色Hoshimachi Suisei 2 \" 手島nari老师绘制的新形象，保留了很多旧形象的特色 在那之后她的事业一路快速攀升，订阅数一路突破40万10，有了自己的电台11，站到了大舞台上面对上万观众12，甚至和老爱同台13……她最初的梦想完成了很多很多，一路走过来的历程真就是正统偶像，而且拥有Hololive内顶级的歌唱力、个人势时期练出的各种技能，还有前前后后结识的各路专业人士，可谓是真正的天道酬勤14。 原创曲和翻唱纷纷突破100万次播放，甚至到达300万Hoshimachi Suisei 6 \" 原创曲和翻唱纷纷突破100万次播放，甚至到达300万 和曾经的“云上之人”ときのそら的合唱Hoshimachi Suisei 3 \" 和曾经的“云上之人”ときのそら的合唱 一点点题外话，她在2018年4月16日的视频中尝试在Akinator（灯神）中问到自己。其中被问到是否和ときのそら有关联，她只能非常遗憾地回答和空妈没有任何关联，并且希望被空妈认知到15。 2年后，她的梦想达成了，她和ときのそら合唱了《餞の鳥》16。 那么仅仅是正统偶像的成长故事就可以征服那么多星詠み吗？ 借用前几天讨论时突然看到一句话： Gachi基础决定anti建筑。 真的笑喷了，这话适合星詠み们的，毕竟个个gachi力和anti力同时拉满（笑） 当然不仅被她的成长经历感动到而成为粉丝，还有很多其他很好玩的点。 “我打块把同事打漏了”Hoshimachi Suisei 4 \" “我打块把同事打漏了” 其中最有名的当然就是看她打块。她不仅经常脊髓打块杂谈，因为水平在VTuber间算是顶尖，还一度引发“世界杯”（Tetris99世界第一看着世界第二和世界第四和她对打17）。 在犬山たまき的憋O打块联动中毫无悬念将所有参战人员尽数打漏，获封VTuber打块女王。 当然，anti力拉满的星詠み们最喜欢看她吃瘪了，于是就有众多又打块又看Vtuber的狙击手纷纷狙击，场面一度非常混乱。 其他还有诸如“正太控的蓝发神经病大姐姐”、“噫hihihihihihi”等等梗，以及Bilibili评论区日常奇妙的anti发言，都侧面反映着星詠み们粉随正主今天也是一样的神经病。 吃瘪后的（とりあえずイマジナリー）１位おめでとう代，没错就是我打的SCHoshimachi Suisei 5 \" 吃瘪后的（とりあえずイマジナリー）１位おめでとう代，没错就是我打的SC 此外还非常有名的就是她在Winter Project里欢声笑语中拿着金斧子五杀，以及对夏色まつり的杀人诛心18。由于她在Winter Project中的表现过于神勇，金斧子甚至加入了她的会员表情包里。 偶 像 发 言WP \" 偶 像 发 言 总而言之，这就是我目前非常喜欢的星街すいせい的一点点简介。 这样的正太控蓝发神经病大姐姐偶像，希望读者也能喜欢。 #すいちゃん今日もかわいい！ ","date":"2020-08-23","objectID":"/2020/08/watching-virtual-youtuber-vtuber/:4:0","tags":["生活","VTuber"],"title":"我在看Virtual YouTuber","uri":"/2020/08/watching-virtual-youtuber-vtuber/"},{"categories":["VTuber"],"content":"思索 1. 人气 较之Bilibili直播间不明所以的“人气值”，Youtube用的是“同时观看人数”。这个数值相对来说是比较可信的，因为确实与聊天滚动速度以及SC密度成正比。除此之外，视频播放数只说明了一部分问题，并不完全代表视频质量。例如星姐与空妈合唱的《餞の鳥》截至8月底尚未突破50万次播放，但是翻唱质量非常高。因此，大可不必被视频播放/直播观看人数蒙蔽了双眼。 2. 中之人/前世 先前常有人转发VTuber中之人/前世信息给我，我是拒绝的。我对于皮套内是什么样的人，她的私人生活情况毫无兴趣。同样也不建议看VTuber的观众过度热衷于此，享受她现在的状态，享受她现在为我们带来的快乐和感动，就十分足够了。 3. 为什么不怎么在Bilibili看VTuber 环境不理想，有些频道的观众自创奇怪规矩太多，评论经常有吵架对线的 鲜有B限直播，平日仅有转播，部分游戏国内甚至都不能转播 Bilibili直播间会员价格高达198CNY/月，且无法享受Youtube/Niconico会员限定直播，与此同时Youtube会员通常500JPY/月 我能听能写日语，有稳定梯子，直接上Youtube练听力和打SC不好吗（笑） 4. SuperChat 呃，2020年8月写这篇文章的时候看到了信用卡的账单，惊觉已经打了2000CNY+的SC了。但是和朋友讨论后发现被读SC的话仿佛参加了一次握手会，嗯，感觉就不是那么肉疼了… 但总之，要对打SC的性质有清醒的认知：和手游氪金差不多，量力而行，千万不要影响正常生活… ","date":"2020-08-23","objectID":"/2020/08/watching-virtual-youtuber-vtuber/:5:0","tags":["生活","VTuber"],"title":"我在看Virtual YouTuber","uri":"/2020/08/watching-virtual-youtuber-vtuber/"},{"categories":["VTuber"],"content":"写在最后 推しは推せる時に推せ！19 珍惜和你喜欢的明星/偶像/歌手相遇的每一天，享受他们带来的快乐与感动。 A.I.Channel - Youtube ↩︎ 花Q鬼畜 - Youtube ↩︎ わらわのうた - 竜胆尊 ↩︎ 必须强调：唱功评价向来有强烈的主观成分，其余参见：蒼月エリ - 萌娘百科 ↩︎ 大切なお知らせ - 蒼月エリ，具体引退原因不明，推测可能是做歌手。 ↩︎ 相见也不再是Eli了，这他妈就是vtuber啊 - ywwuyi ↩︎ 数据来源：ライブ収益・全世界トップ100（2020年上半期） ↩︎ Suisei Channel - Youtube ↩︎ もこ田めめめ - Youtube ↩︎ 截至2020-08-24，Suisei Channel订阅量为44万人 ↩︎ 【文化放送】星街すいせいのMUSIC SPACE ↩︎ Bilibili Macro Link 2020 ↩︎ NHKバーチャル文化祭 - Twitter ↩︎ 更多详细历程和轶事请参照 星街すいせい - 萌娘百科 ↩︎ 【アキネイター】すいせいを認知させよう計画！！！！- Youtube ↩︎ D/Zeal「餞の鳥」 / ときのそら × 星街すいせい(Cover) ↩︎ 原视频因版权问题暂时被隐藏，放出时间未知 ↩︎ 【Project Winter】就在这里把你们都杀光！- Bilibili ↩︎ 推しは推せる時に推せ - ピクシブ百科事典 ↩︎ ","date":"2020-08-23","objectID":"/2020/08/watching-virtual-youtuber-vtuber/:6:0","tags":["生活","VTuber"],"title":"我在看Virtual YouTuber","uri":"/2020/08/watching-virtual-youtuber-vtuber/"},{"categories":["Tech"],"content":"Windows Bug 10","date":"2020-08-22","objectID":"/2020/08/fix-windows-10-transparency/","tags":["技术"],"title":"Windows 10 透明效果失效","uri":"/2020/08/fix-windows-10-transparency/"},{"categories":["Tech"],"content":"前几日发现新装的Windows 10 Pro上，透明效果没有启用。根据各个社区的信息发现这属于挺常见的一个问题，根据社区意见用DDU卸载并重新安装过Nvidia驱动、调整并复原色彩/分辨率设置均无效，将控制面板中的透明效果关闭再打开也无效。 在寻找多日后在Microsoft Community上发现了解决方案，并尝试设置有效，操作记录如下。原帖：Transparency Effects Not working 首先Win+R运行regedit 定位注册表至如下位置： HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize 其中一个DWORD名称为EnableTransparency，首先将其改为0。 关机再开机，将EnableTransparency改为1，毛玻璃效果即恢复。1 此处可再关机开机一次，确保设置生效。 配置了半天的Windows Terminal终于不是丑哭了的全实心界面了Windows Terminal \" 配置了半天的Windows Terminal终于不是丑哭了的全实心界面了 虽然是一个小小的问题，知道怎么办后解决起来也很快。但是巨硬你能不能上点心，控制面板里的按钮居然是无效的怎么想出来的…… Update：这个问题休眠后启动即会部分复现（Windows Terminal 透明效果仍然有效）。重新启动后，以上设置全部失效，得按照上述流程再来一遍。看了下这个问题似乎已经从1803开始就有报告2，1903也有3，到现在2004依然还是存在4。可见得这个Bug出现并提交Microsoft有段时间了，还是没有修复，我佛了。 实际测试表明此处重新启动不会生效，必须关机-开机。 ↩︎ 参见：Windows 10 Transparency effect is not working ↩︎ 参见：Transparency Effect not working in windows 1903 ↩︎ 参见：Win 10 version 2004 Start Menu transparency ↩︎ ","date":"2020-08-22","objectID":"/2020/08/fix-windows-10-transparency/:0:0","tags":["技术"],"title":"Windows 10 透明效果失效","uri":"/2020/08/fix-windows-10-transparency/"},{"categories":["medical"],"content":"文献标题：Lipoprotein(a) as a cardiovascular risk factor 文献地址：https://academic.oup.com/eurheartj/article/31/23/2844/2398484 既往研究认为，冠心病的风险与低密度脂蛋白（Low-density lipoprotein cholesterol, LDL-C）密切相关，较高的LDL-C水平更易引发冠心病。 针对不同的人群，LDL-C的控制方案和水平各有不同，首先还是复习指南1： 二级预防ASCVD-secondary prevention \" 二级预防 一级预防ASCVD-secondary prevention \" 一级预防 可以看到指南在二级预防中非常重视LDL-C水平的控制。推荐药物方面除了临床常见的他汀和依折麦布，指南也已经纳入了新药PCSK9-Inhibitor。这些药物都是注重于降低LDL-C的浓度。那么是否具有其他位点，同样可以控制血脂呢？ 在2010年已有研究指出：脂蛋白(a)与冠心病风险存在关联2。 Lp(a) 结构，由共价结合的LDL样颗粒和Apo(a)组成Lp(a)structure \" Lp(a) 结构，由共价结合的LDL样颗粒和Apo(a)组成 可以看到Lp(a)内同样包含LDL样颗粒，降低Lp(a)可能同样使冠心病患者获益。 文中同样提出了Lp(a)的控制水平Lp(a)level \" 文中同样提出了Lp(a)的控制水平 但比较遗憾的是，目前尚无专门针对血清Lp(a)水平的药物正式获批，既往常用烟酸对其进行控制。然而烟酸在应用中因其具有扩血管作用，常伴有皮肤潮红、头晕、心动过速、心悸、气短、出汗等等等等副作用，限制了它的临床使用。好消息是，近期发表在NEJM上的一篇文章中采用了靶向肝细胞的反义寡核苷酸AKCEA-APO(a)-LRx，并发现在Lp(a)升高的冠心病患者中，降低血清Lp(a)含量可显著降低CVD风险3。 治疗效果非常不错Lp(a)treated level \" 治疗效果非常不错 这些研究说明：应当在中高危冠心病患者中筛查Lp(a)水平，且已有降低Lp(a)的新药进入临床试验阶段。 此外也有研究发现，高危冠心病家族史与Lp(a)可能可以用于联合预测冠心病风险，作出一级预防4，将Lp(a)的应用价值再向前推进了一步。 Lp(a)水平与家族史联合预测冠心病风险Lp(a)treated level \" Lp(a)水平与家族史联合预测冠心病风险 总而言之，脂蛋白(a)是一种可以预测冠心病发生的生物标记物，也是潜在的冠心病治疗靶点；进后需要进一步探索相应的切点，对人群进行冠心病危险分层。 Grundy S M, Stone N J, Bailey A L, et al. Guideline on the management of blood cholesterol: a report of the American College of Cardiology/American heart association Task force on clinical practice guidelines[J]. J Am Coll Cardiol, 2018, 73(24): e285-350. ↩︎ Nordestgaard B G, Chapman M J, Ray K, et al. Lipoprotein (a) as a cardiovascular risk factor: current status[J]. European heart journal, 2010, 31(23): 2844-2853. ↩︎ Tsimikas S, Karwatowska-Prokopczuk E, Gouni-Berthold I, et al. Lipoprotein (a) reduction in persons with cardiovascular disease[J]. New England Journal of Medicine, 2020, 382(3): 244-255. ↩︎ Mehta A, Virani S S, Ayers C R, et al. Lipoprotein (a) and family history predict cardiovascular disease risk[J]. Journal of the American College of Cardiology, 2020, 76(7): 781-793. ↩︎ ","date":"2020-08-15","objectID":"/2020/08/lipoproteina-as-cvd-risk-factor/:0:0","tags":["文献阅读","技术"],"title":"文献阅读：脂蛋白(a)作为CVD危险因素","uri":"/2020/08/lipoproteina-as-cvd-risk-factor/"},{"categories":["medical"],"content":"轮转期间其实收了不少无明显诱因的室颤病人，并在排除相关可逆性原因后选择植入ICD；同样，我也非常关注S-ICD的发展。 今天在NEJM上读到最新的S-ICD及ICD疗效评价，故记录下来。 文献标题：Subcutaneous or Transvenous Defibrillator Therapy 文献地址：https://www.nejm.org/doi/full/10.1056/NEJMoa1915932 首先复习一下ICD的植入指征1： 根据2018年AHA/ACC/HRS指南制作的简明指征ICD-indications \" 根据2018年AHA/ACC/HRS指南制作的简明指征 根据上图可知，主要植入ICD的患者包括冠状动脉疾病（CAD, coronary artery disease）2合并有左室射血分数下降（LVEF, left ventricular ejection fraction）的患者、心源性猝死（VT、VF）生还者。 而目前常用的ICD为经静脉植入型号，如Medtronic EVERA™ ICD等。经静脉植入的ICD，主机位于胸前区、锁骨下方2cm左右的皮下囊袋内，导线入路通常为锁骨下静脉或头静脉3。 ICD或单腔起搏器常用入路ICD-implantation \" ICD或单腔起搏器常用入路 这一入路技术开展多年，血管穿刺非常成熟，但是面临着术后感染、感染性心内膜炎、心脏瓣膜赘生物等术后并发症；严重时该并发症可致心肌穿孔或患者死亡，或是导致导线失效，进而在VT/VF时不能识别及除颤1。 Boston Scientific在2010年推出了全皮下植入ICD4，这一ICD的优势在于它的创面更小，且全部位于皮下，不进入静脉，显著降低了血管穿刺并发症、全身血流感染风险以及严重的心脏并发症（心肌穿孔、心包填塞）等等。 S-ICD的4种入路S-ICD-implantation \" S-ICD的4种入路 但是，由于传统的经静脉ICD是直接向心肌释放除颤能量，因此可能具有更好的VT/VF识别率，以及更低的除颤能量，因此S-ICD一直以来备受质疑。 这篇文献中的研究则是一项非劣效性研究，旨在明确S-ICD是否非劣效于传统ICD。该项目基于PRAETORIAN研究，共纳入了876名患者。这些患者根据指南均具有I或IIa类植入ICD指征用以一级或二级预防。排除标准包括既往ICD植入史、合并有其他心动过缓并需要植入单腔/双腔起搏器、心室率小于170次/分的室速、药物和消融难治的复发性单形性室性心动过速。研究中共有442名患者植入S-ICD、434名患者经静脉植入ICD，并在植入后进行4个月的随访，并在之后每年至少随访2次。 主要终点事件： 植入物相关的并发症 植入物失效致移除主机及导线 需要引流、输血、延长住院天数的囊袋血肿 植入物相关的栓塞事件 需介入手术并延长住院天数的气胸或血胸 心脏穿孔或填塞 导线重新放置或更换 其他需手术或药物介入治疗的与导线或主机相关的问题 不恰当放电 次要终点事件： 包括主要终点的各个部分 任何原因导致的死亡 恰当的放电（包括ATP） 主要不良心脏事件（Major adverse cardiac events, MACE） 因心衰住院 分配设备交叉 主要终点事件result2 \" 主要终点事件 次要终点事件result2 \" 次要终点事件 研究结果大体上可以认为S-ICD非劣效于ICD，因为在主要终点事件的发生数量相当，植入装置相关的并发症更少。 但是也必须指出相应的问题： S-ICD的不恰当放电次高于ICD：可能与T波和P波过感知，以及心室率感知阈下房颤/室上速相关 S-ICD的ATP（Antitachycardia Pacing）功能以及感知功能较ICD薄弱，难以通过ATP终止VT，进而造成放电次数增加或不恰当放电 由此可见，尽管S-ICD的总体治疗效果不亚于ICD且植入物相关并发症更少，但是功能实现存在难度，以及程控细节上较传统ICD要求更高；要进入临床大规模应用甚至替代传统ICD还有很长的路要走。 Al-Khatib S M, Stevenson W G, Ackerman M J, et al. 2017 AHA/ACC/HRS guideline for management of patients with ventricular arrhythmias and the prevention of sudden cardiac death: a report of the American College of Cardiology/American Heart Association Task Force on Clinical Practice Guidelines and the Heart Rhythm Society[J]. Journal of the American College of Cardiology, 2018, 72(14): e91-e220. ↩︎ 文中IHD指缺血性心脏病（ischemic heart disease），与CAD同义。 ↩︎ 防疫·关心 | 一份来自吴立群教授关于心脏起搏器的问答清单：https://www.drvoice.cn/article/5507 ↩︎ Bardy G H, Smith W M, Hood M A, et al. An entirely subcutaneous implantable cardioverter–defibrillator[J]. New England Journal of Medicine, 2010, 363(1): 36-44. ↩︎ ","date":"2020-08-14","objectID":"/2020/08/s-icd-vs-icd/:0:0","tags":["文献阅读","技术"],"title":"文献阅读：S-ICD与ICD的临床效果评价","uri":"/2020/08/s-icd-vs-icd/"},{"categories":["Tech"],"content":"想到迁移到Cloudflare Workers的原因是看到了苏卡卡对博客速度进一步优化的文章，觉得Cloudflare Workers这样的Serverless服务非常的酷，而且在短暂的部署尝试中我就感觉到快。 然而迁移后验证了朋友的说法，用用可以，但是把生产环境放上去还是算了。因此总体算是一次不太成功的尝试。由于我没有进一步排障和优化的能力，只能记录一下踩坑记录。 一句话总结：部署时撞到的坑非常非常多，可能比我部署Hugo时遇到的坑还要多。 ","date":"2020-08-12","objectID":"/2020/08/migrating-blog-to-cloudflare-workers/:0:0","tags":["折腾","网络"],"title":"浅尝Cloudflare Workers部署静态博客","uri":"/2020/08/migrating-blog-to-cloudflare-workers/"},{"categories":["Tech"],"content":"坑1：Wrangler需配置用户 我是利用Github Actions对博客更新进行CI，仅仅是这一步已经出现了大量的bug。 若要部署至Cloudflare Workers，需要应用Wrangler CLI进行部署。本地添加配置、如何填写相关项目可以继续参考苏卡卡的文章 然而在Github Actions库中cloudflare/wrangler-action@1.2.0，执行时直接报错，查看信息发现could not determine the current user wrangler，考虑需要定义$USER，查看社区讨论后发现修改配置文件。 修改配置文件时感受到了来自yml深深的恶意 最终配置文件如下： name:Hugo Build and Deployon:push:branches:- masterjobs:build-deploy:runs-on:ubuntu-lateststeps:- uses:actions/checkout@v1with:submodules:true- name:Setup Hugouses:peaceiris/actions-hugo@v2with:hugo-version:latestextended:true- name:Buildrun:hugo --gc --minify- name:Deploy to Cloudflare Workers with Wrangleruses:cloudflare/wrangler-action@1.2.0env:USER:root# 非常重要！必须定义with:# Your Cloudflare API TokenapiToken:${{ secrets.CLOUDFLARE_TOKEN }}# 输入你自己定义的secret名称 ","date":"2020-08-12","objectID":"/2020/08/migrating-blog-to-cloudflare-workers/:1:0","tags":["折腾","网络"],"title":"浅尝Cloudflare Workers部署静态博客","uri":"/2020/08/migrating-blog-to-cloudflare-workers/"},{"categories":["Tech"],"content":"坑2：配置完Workers后需要填写DNS记录 这一点是个坑，几乎所有的教程都没有提到这里该怎么填。最后是从Cloudflare Community上翻到的答案（具体讨论点这里）。 在指定router后（例如我的是指向dev.aozaki-kuro.com/*），只需要在DNS记录内添加一个A记录，指向一个空IP即可。 这个空IP可以是192.0.2.1以及类似的空IP。 其实就这么简单，但是连官方文档都没写，大部分教程也没写0001 \" 其实就这么简单，但是连官方文档都没写，大部分教程也没写 ","date":"2020-08-12","objectID":"/2020/08/migrating-blog-to-cloudflare-workers/:2:0","tags":["折腾","网络"],"title":"浅尝Cloudflare Workers部署静态博客","uri":"/2020/08/migrating-blog-to-cloudflare-workers/"},{"categories":["Tech"],"content":"坑3：不支持中文路径 尽管苏卡卡在博客中提到了对中文路径的解决，发现也Github上也merge了，但是实际部署后还是无法对/测试/index.html这样的路径进行路由。意味着需要放弃博客内对整个中文tags的聚合。这一点是不太能接受的，也是不再继续用下去的原因。 ","date":"2020-08-12","objectID":"/2020/08/migrating-blog-to-cloudflare-workers/:3:0","tags":["折腾","网络"],"title":"浅尝Cloudflare Workers部署静态博客","uri":"/2020/08/migrating-blog-to-cloudflare-workers/"},{"categories":["Tech"],"content":"总结 Cloudflare Workers仅仅是部署就已经出现了这样那样的坑，官方文档只有简单几行字，很多操作细节根本没有，还别提部署上去后效果也并不是那么理想………… 目前保留了指向Cloudflare Workers的链接，但是不再CI上去，可以参观一下： https://dev.aozaki-kuro.com/ Expire date: 2020-09-11 总之是个坑.jpg ","date":"2020-08-12","objectID":"/2020/08/migrating-blog-to-cloudflare-workers/:4:0","tags":["折腾","网络"],"title":"浅尝Cloudflare Workers部署静态博客","uri":"/2020/08/migrating-blog-to-cloudflare-workers/"},{"categories":["Tech"],"content":"WARNING！本文部分内容建议18岁以上阅读。 上个月把自己的本地图库给重构了一次，稍微缓解了某些文件夹乱如node_modules的处境让色图整理变得伟大！ ","date":"2020-08-11","objectID":"/2020/08/arranging-local-pictures/:0:0","tags":["折腾","强迫症","整理癖","仓鼠症"],"title":"本地图片库的整理思路","uri":"/2020/08/arranging-local-pictures/"},{"categories":["Tech"],"content":"发现问题 事情的起因其实是根据Pockies的教程将自己的视频库爱情动作片库进行了一次整理，并且搭建起了基于群晖的Plex视频库。 感兴趣的读者可以 点击这里 学习如何整理。 嗯，很整齐，很美观，满足强迫症和整理癖的需求片库 \" 嗯，很整齐，很美观，满足强迫症和整理癖的需求 然而当我点开放置Pixiv Downloader批量拖下来的图片库时…我就感到不适。 这就是我的感受node_modules \" 这就是我的感受 由于整个图库文件夹实在过于积重难返，加上出现了用Resilo Sync在多台电脑之间选择性同步的需求，遂下定决心将图库文件夹进行一次重构。 ","date":"2020-08-11","objectID":"/2020/08/arranging-local-pictures/:1:0","tags":["折腾","强迫症","整理癖","仓鼠症"],"title":"本地图片库的整理思路","uri":"/2020/08/arranging-local-pictures/"},{"categories":["Tech"],"content":"提出假设 ","date":"2020-08-11","objectID":"/2020/08/arranging-local-pictures/:2:0","tags":["折腾","强迫症","整理癖","仓鼠症"],"title":"本地图片库的整理思路","uri":"/2020/08/arranging-local-pictures/"},{"categories":["Tech"],"content":"通过tags分类？ 目前互联网上最优秀的图库应当属于Booru站点，作为代表的当然是Danbooru以及Yande.re。 Booru站点的优势在于拥有强大的tags功能，不仅可以对图片的作者进行标记，且可以通过大量用户编辑的tags对性癖进行分类。 原先的构想也是基于tags，以作者为文件夹单位，进行图库的整理。但是发现tags的交叉太多，并且不可能一张张手动进行标记。此外也不想把一张图片复制到多个文件夹下（这和node_modules有什么区别）。 如果说能把Plex的优点（服务端获取额外刮削信息并展示）和Booru的优点（大量tags信息）结合起来就好了，但我不会写爬虫。此外还有一个难点：如何让本地图片和云端对应起来？图片可能来源于Twitter、Pixiv、fanbox、patreon等等网站，甚至是其他booru图站；极端情况下文件名丢失，对应难度直线上升。 基于以上理由，暂不考虑tags分类法。 ","date":"2020-08-11","objectID":"/2020/08/arranging-local-pictures/:2:1","tags":["折腾","强迫症","整理癖","仓鼠症"],"title":"本地图片库的整理思路","uri":"/2020/08/arranging-local-pictures/"},{"categories":["Tech"],"content":"仅以作者进行分类？ 这个其实是最暴力的方式。因为我本地部署了Listary和Everything进行索引和搜素服务，所以仅仅对作者进行搜索是不成问题了。 但是在开篇就已经说过了，Pixiv Downloader下载堆积出来的混乱文件夹令我只有把文件夹关掉的冲动，所以否决。 最大的问题还是在于图片的数量和来源非常杂乱，不像爱情动作片可以从DMM.co.jp等站点拉取标准化的信息并进行分类。 ","date":"2020-08-11","objectID":"/2020/08/arranging-local-pictures/:2:2","tags":["折腾","强迫症","整理癖","仓鼠症"],"title":"本地图片库的整理思路","uri":"/2020/08/arranging-local-pictures/"},{"categories":["Tech"],"content":"应用软件？ 备选方案有Eagle和Lightroom，以及本地看图的XnView。 这些软件均拥有类似于tags的功能，但是前者很“重”，而且是付费软件，尽管我有Lightroom的订阅，但因其不能兼顾移动端而放弃。XnView更不必说了，同样是不能兼容移动端，所以最后决定细化文件夹结构以解决部分问题、满足需求。 ","date":"2020-08-11","objectID":"/2020/08/arranging-local-pictures/:2:3","tags":["折腾","强迫症","整理癖","仓鼠症"],"title":"本地图片库的整理思路","uri":"/2020/08/arranging-local-pictures/"},{"categories":["Tech"],"content":"解决问题 那么最终怎么解决呢？我选择了并轨制。 事先说明：这是一个基于主观判断的整理方式，并不一定适合所有人。 ","date":"2020-08-11","objectID":"/2020/08/arranging-local-pictures/:3:0","tags":["折腾","强迫症","整理癖","仓鼠症"],"title":"本地图片库的整理思路","uri":"/2020/08/arranging-local-pictures/"},{"categories":["Tech"],"content":"最终的文件夹结构 尽管分类和分层变多了，但尽可能结合了tags的便捷，并最大程度利用了Pixiv Downloader的文件结构有助于检索。 图库 │ │ ├────图片 │ │ │ ├────Artist │ │ ├───Paid Contents #故名思义 │ │ │ ├────xxx │ │ │ │ └──xxx_fanbox #添加来源 │ │ │ └────yyy #下略 │ │ │ │ │ ├───★★★★★ #根据星级分层 │ │ ├───★★★★ │ │ ├───★★★ │ │ └───Unsorted #用作批量下载的缓冲区，尽快解决吧… │ │ │ ├────Fetish #故名思义 │ │ ├───xxx │ │ └───yyy │ │ │ ├────Title #根据不同的作品（游戏、动画等安放） │ │ ├───xxx │ │ └───yyy │ │ │ ├────Vtuber #根据不同的Vtuber进行分类 │ │ ├───xxx │ │ │ └──xxx_R18 #便于检索，下略 │ │ └───yyy │ │ │ └────Unsorted #总有些无处安放的图 │ ├────照片 #自己拍摄的照片 │ ├───人像 │ ├───风景 │ └───其他 │ └────壁纸 ├───5K Wallpapers ├───2K Wallpapers └───iPhone Wallpapers ","date":"2020-08-11","objectID":"/2020/08/arranging-local-pictures/:3:1","tags":["折腾","强迫症","整理癖","仓鼠症"],"title":"本地图片库的整理思路","uri":"/2020/08/arranging-local-pictures/"},{"categories":["Tech"],"content":"Aritist文件夹 主要形式是\"userName\" (\"pixivID\")的形式，例如米山舞 (1554775)，这一部分可手动创建，或通过Pixiv Downloader进行定义。 我的Pixiv Download参数设定如下 PxDownloader/${userName} (${userId})/${id}_p0 #单一档案用 PxDownloader/${userName} (${userId})/${id}_p${page} #复数档案 ","date":"2020-08-11","objectID":"/2020/08/arranging-local-pictures/:3:2","tags":["折腾","强迫症","整理癖","仓鼠症"],"title":"本地图片库的整理思路","uri":"/2020/08/arranging-local-pictures/"},{"categories":["Tech"],"content":"将部分文件夹内文件名序列化 主要是Paid Contents这一部分来源非常乱： Patreon上部分作者会提供当期奖励打包，但很多需要自己右键保存 fanbox的图片命名是无序的，直接下载后放入图库会出现非常大的混乱 有些时候连jpg文件后缀也是jpeg，强迫症非常不适 这么多问题，一个个手动就很蛋疼。于是我采用了ReNamer，进行批量序列化的操作。 1.程序界面与结果预览；2.删除扩展名以外的文件名； 3.序列化并补足四位数；4.将所有的扩展名统一。 最后可以获得0001.jpg起的令人舒适的文件夹内容。 ","date":"2020-08-11","objectID":"/2020/08/arranging-local-pictures/:3:3","tags":["折腾","强迫症","整理癖","仓鼠症"],"title":"本地图片库的整理思路","uri":"/2020/08/arranging-local-pictures/"},{"categories":["Tech"],"content":"问题解决了吗？ 问题解决了一部分 细化文件夹结构，在直接文件夹内浏览时以少许速度为牺牲，提升了准确度 解决了Unsorted缓冲区堆积过多却不知道向哪里分流的问题 对于Listary以及Everything的影响较少 没有解决的问题：针对文件直接添加tags。 还是如同前文所说，tags尽管可以最大程度细化分类、精准搜索图片，但是需要大量编辑人员进行添加，个人用户不可能做到这么精细。 另外，基于tags的文件浏览器的缺乏，以及数据共通的难度。e.g. XnView尽管拥有类似tags的系统，但是无法和iOS进行数据共通。 所以最后放弃了tags分类的想法。 ","date":"2020-08-11","objectID":"/2020/08/arranging-local-pictures/:4:0","tags":["折腾","强迫症","整理癖","仓鼠症"],"title":"本地图片库的整理思路","uri":"/2020/08/arranging-local-pictures/"},{"categories":["Tech"],"content":"总结 重构图库的结果是并轨制，以少量文件夹浏览速度为牺牲，提升了准确度。 如果有能够结合Booru和Plex的优秀的tags管理方法，请务必告诉我。 ","date":"2020-08-11","objectID":"/2020/08/arranging-local-pictures/:5:0","tags":["折腾","强迫症","整理癖","仓鼠症"],"title":"本地图片库的整理思路","uri":"/2020/08/arranging-local-pictures/"},{"categories":["Tech"],"content":"先前抱怨过Hugo本地编译再git push至远端的操作过于繁琐，今天发现可以通过Github Action实现对Hugo的自动化部署并实践成功，故记录折腾过程。 此处应有 从各种意义上来讲这玩意太他妈邪门.jpg 总之因为各种教程都有点语焉不详，于是还是自己把傻瓜化的过程记录下来得了。 ","date":"2020-08-10","objectID":"/2020/08/deploying-hugo-with-github-actions/:0:0","tags":["折腾","网络"],"title":"利用Github Action自动化部署Hugo","uri":"/2020/08/deploying-hugo-with-github-actions/"},{"categories":["Tech"],"content":"建立新Respiratory放置博客源文件 竟然把Repository（资料库）拼成Respiratory（呼吸道）了，丢人 这一步不用说吧，新建后将所有文件添加至新repo里（我用Github Desktop上传的），然后准备进行下一步操作。 ","date":"2020-08-10","objectID":"/2020/08/deploying-hugo-with-github-actions/:1:0","tags":["折腾","网络"],"title":"利用Github Action自动化部署Hugo","uri":"/2020/08/deploying-hugo-with-github-actions/"},{"categories":["Tech"],"content":"通过Github Actions进行自动部署 在本地新生成用于两个repo间通讯的SSH KEY ssh-keygen -tecdsa cat ~/.ssh/id_ecdsa.pub #获取公钥 cat ~/.ssh/id_ecdsa. # 获取私钥 添加私钥的方法如下 此处因我的私钥变量名定为ACTIONS_DEPLOY_KEY，故填写相应名称。 在放置博客源文件的repo里，在Actions中建立Workflow 我的build.yml文件如下 name:Hugo Build and Deployon:push:branches:- masterjobs:build-deploy:runs-on:ubuntu-lateststeps:- uses:actions/checkout@v1 # v2 does not have submodules option nowwith:submodules:true- name:Setup Hugouses:peaceiris/actions-hugo@v2with:hugo-version:latest# 应用最新的hugoextended:true# 我的主题需要应用hugo-extende- name:Buildrun:hugo --gc --minify- name:Deployuses:peaceiris/actions-gh-pages@v3with:deploy_key:${{ secrets.ACTIONS_DEPLOY_KEY }}#这里在repo settings里填入SSH私钥external_repository:xxxxxxxx/xxxxxxxx.github.io# \u003c- 改成自己的 user github pagepublish_dir:./public# \u003c- 指定成品放置文件夹publish_branch:master# \u003c- 远端repo目标分支 随后即可等待自动远端生成站点。 ","date":"2020-08-10","objectID":"/2020/08/deploying-hugo-with-github-actions/:2:0","tags":["折腾","网络"],"title":"利用Github Action自动化部署Hugo","uri":"/2020/08/deploying-hugo-with-github-actions/"},{"categories":["Tech"],"content":"Github Desktop 对于我这样几乎无Coding基础的用户来说，为了更进一步少敲代码，除了自己写一个批处理文件，也可以应用Github Desktop进行处理。桌面版在这里下载，在pull后即可进行commit和push操作。唯一需要注意的是，如果之前就用的SSH连接，且仅在WSL内生成过SSH KEY，在Windows下需要再进行一次操作以保证能勾顺利git push ","date":"2020-08-10","objectID":"/2020/08/deploying-hugo-with-github-actions/:3:0","tags":["折腾","网络"],"title":"利用Github Action自动化部署Hugo","uri":"/2020/08/deploying-hugo-with-github-actions/"},{"categories":["Tech"],"content":"总结 所以说犯懒是推动发明进步的第一生产力（迫真） 目前是通过Hugo部署在Github Pages上，套了一层Cloudflare CDN，并利用Github Action完成自动化部署；本地则通过Github Desktop简化上传操作。 折腾到现在应该基本达成顺利、顺畅写博客的目的了。总感觉有点本末倒置了啊喂 ","date":"2020-08-10","objectID":"/2020/08/deploying-hugo-with-github-actions/:4:0","tags":["折腾","网络"],"title":"利用Github Action自动化部署Hugo","uri":"/2020/08/deploying-hugo-with-github-actions/"},{"categories":["Tech"],"content":"本博客部署于Github Pages上，最初构建时应用的Hexo。在被Node.js的巨量依赖和最终页面生成速度面前决定迁移至Hugo。Hugo部署的坑很多，故保留完整操作与相关踩坑记录。😫 ","date":"2020-08-09","objectID":"/2020/08/hugo-deployment-debugging/:0:0","tags":["折腾","网络"],"title":"Hugo部署与踩坑记","uri":"/2020/08/hugo-deployment-debugging/"},{"categories":["Tech"],"content":"WSL2的部署 在反复折腾几轮后遂决定 滚回Hexo方案 在WSL下Hexo的生成速度面前我又滚回来了。 以下为操作笔记： ","date":"2020-08-09","objectID":"/2020/08/hugo-deployment-debugging/:1:0","tags":["折腾","网络"],"title":"Hugo部署与踩坑记","uri":"/2020/08/hugo-deployment-debugging/"},{"categories":["Tech"],"content":"Windows 10内启用相关功能 首先确保Windows 10版本在18917以上，Store内安装Ubuntu后开始WSL2的配置。1 以管理员权限运行Powershell，并启用虚拟机平台可选组件 Enable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform 启用Linux子系统功能 Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux 重启后打开安装的Ubuntu子系统，输入用户名密码，完成WSL1的安装；此时在Powershell内输入wsl -l可查看安装的版本号（我所安装的是Ubuntu 18.04 LTS，则显示Ubuntu-18.04）。 ","date":"2020-08-09","objectID":"/2020/08/hugo-deployment-debugging/:1:1","tags":["折腾","网络"],"title":"Hugo部署与踩坑记","uri":"/2020/08/hugo-deployment-debugging/"},{"categories":["Tech"],"content":"转换为WSL2 首先至Microsoft下载Linux Kernel，安装后方可进行转换。 根据wsl -l获得的版本号，将其转换为WSL2。 wsl --set-version Ubuntu-18.04 2 之后可以输入wsl --set-default-version 2，使之后安装的Linux子系统都安装到WSL2中。 至此WSL2的部署完成。 ","date":"2020-08-09","objectID":"/2020/08/hugo-deployment-debugging/:1:2","tags":["折腾","网络"],"title":"Hugo部署与踩坑记","uri":"/2020/08/hugo-deployment-debugging/"},{"categories":["Tech"],"content":"Hugo ","date":"2020-08-09","objectID":"/2020/08/hugo-deployment-debugging/:2:0","tags":["折腾","网络"],"title":"Hugo部署与踩坑记","uri":"/2020/08/hugo-deployment-debugging/"},{"categories":["Tech"],"content":"WSL2内部署Hugo 对于老手应该问题不大，我还是记录一下新手的操作防止自己忘记…… cd /tmp wget https://github.com/gohugoio/hugo/releases/download/v0.74.3/hugo_extended_0.74.3_Linux-64bit.tar.gz tar xvf hugo_extended_0.74.3_Linux-64bit.tar.gz sudo mv hugo /usr/local/bin hugo 此处要注意，虽然WSL2是64位的，但好像只能运行32位的程序（未确证）。 ","date":"2020-08-09","objectID":"/2020/08/hugo-deployment-debugging/:2:1","tags":["折腾","网络"],"title":"Hugo部署与踩坑记","uri":"/2020/08/hugo-deployment-debugging/"},{"categories":["Tech"],"content":"Hugo相关操作 创建博客与添加新文章 如下命令创建博客 hugo new site blog #这里填入自己的博客根目录名称 cd blog 新增主题（这里应用的是MemE）2 git init git submodule add --depth 1 https://github.com/reuixiy/hugo-theme-meme.git themes/meme rm config.toml \u0026\u0026 cp themes/meme/config-examples/zh-cn/config.toml config.toml #将config.toml替换为主题用 新建文章与关于页面 hugo new \"tech/hello-world.md\" hugo new \"about/_index.md\" 运行本地渲染，进行预览 hugo server -D 连接至SSH ssh-keygen -tecdsa #创建sshkey，可以看到一个谜之ASCII图片 cat ~/.ssh/id_ecdsa.pub #查看公钥，复制后添加至Github 推送更新 git remote set-url origin git@github.com:xxxxxxx #此处修改为自己项目主页的ssh地址 在添加过origin后如下操作： hugo --gc --minify #这里在博客根目录下执行 cd public git add . git status git commit -m \"Update\" #根据需要填写更新名称 git push 如果博客出现渲染问题，可以改用hugo --gc -e production --cleanDestinationDir进行重构。 ","date":"2020-08-09","objectID":"/2020/08/hugo-deployment-debugging/:2:2","tags":["折腾","网络"],"title":"Hugo部署与踩坑记","uri":"/2020/08/hugo-deployment-debugging/"},{"categories":["Tech"],"content":"部署Cloudflare CDN 由于国内CDN均要求备案，粗略看了看备案的冗长过程并想到要在博客底下挂一个又长又丑的备案号，加之DNSpod的解析服务突然出错（DNSpod你自己说你是第几次了），便下定决心迁移至Cloudflare的降速CDN上。 ","date":"2020-08-09","objectID":"/2020/08/hugo-deployment-debugging/:3:0","tags":["折腾","网络"],"title":"Hugo部署与踩坑记","uri":"/2020/08/hugo-deployment-debugging/"},{"categories":["Tech"],"content":"为何选择Cloudflare？ 原因很简单，Cloudflare的CDN遍布全世界，并且提供号称全球最快的DNS 1.1.1.1、免费的SSL证书，以及号称几乎打不死的DDoS保护，而且最重要的是不需要备案🤣 近期还听说Cloudflare在内地与百度有合作，部署了大量节点，想必访问速度应该是差不到哪里去……吧。 配置过程不详述了，我主要参考的是Mogeko的Cloudflare CDN添加教程。 部署后的踩坑记录更新在后面。 ","date":"2020-08-09","objectID":"/2020/08/hugo-deployment-debugging/:3:1","tags":["折腾","网络"],"title":"Hugo部署与踩坑记","uri":"/2020/08/hugo-deployment-debugging/"},{"categories":["Tech"],"content":"踩坑记 ","date":"2020-08-09","objectID":"/2020/08/hugo-deployment-debugging/:4:0","tags":["折腾","网络"],"title":"Hugo部署与踩坑记","uri":"/2020/08/hugo-deployment-debugging/"},{"categories":["Tech"],"content":"CSS错误的排查 最开始听说Hugo轻量化且不需要那么多依赖，于是便想着往Hugo迁移。当然折腾上手后才发现踩坑的点太多了。 首先部署在Windows 10下，未使用WSL时，遇到了本地hugo server -D预览正常，git push后页面出错的问题。排查几次后发现报错如下： Failed to find a valid digest in the 'integrity' attribute for resource 'xxxxxxx.css' with computed SHA-256 integrity. The resource has been blocked. 查了多方资料后发现有怀疑CRLF/LF的问题，也有说可以把integrity属性删除即正常的。但是根据相关指引执行后均没有效果。 此外，老马在Manjaro下生成的网页git push后是正常的，可以正常加载CSS，Windows下无论通过Powershell还是Git bash窗口执行都不正常。问题排查困难重重，暂时断了迁移至Hugo的念想。 一直到昨天，尝试性地部署了WSL2，最终编译才通过，让CSS能够正常加载。 ","date":"2020-08-09","objectID":"/2020/08/hugo-deployment-debugging/:4:1","tags":["折腾","网络"],"title":"Hugo部署与踩坑记","uri":"/2020/08/hugo-deployment-debugging/"},{"categories":["Tech"],"content":"大小写的识别 昨天在成功通过Hugo部署后发现了问题：首页可以加载文章，但点进Read More后404。 进行多次排查后发现是文章所在文件夹的大小写问题，这一问题在Hexo下未发生，将所有文件改为小写后加载正常。 ","date":"2020-08-09","objectID":"/2020/08/hugo-deployment-debugging/:4:2","tags":["折腾","网络"],"title":"Hugo部署与踩坑记","uri":"/2020/08/hugo-deployment-debugging/"},{"categories":["Tech"],"content":"部署操作麻烦 除了难以排查的CSS问题和大小写识别的坑，由于我的coding基础薄弱，Hugo部署时的命令行数量也让我头疼。不仅难记且涉及根目录及public/两个目录层级。而Hexo则只需要优雅地输入hexo g \u0026\u0026 hexo d即可完成在服务端的部署。 ","date":"2020-08-09","objectID":"/2020/08/hugo-deployment-debugging/:4:3","tags":["折腾","网络"],"title":"Hugo部署与踩坑记","uri":"/2020/08/hugo-deployment-debugging/"},{"categories":["Tech"],"content":"Cloudflare CDN部署时的注意事项 由前面的踩坑经验可知，Hugo生成的CSS需要检查完整性，所以尽管Cloudflare提供了Auto Minify功能，但是请千万不要去勾选HTML以外的选项。Auto Minify会导致出现前述的CSS完整性错误，进而使得网页无法加载CSS样式。 ","date":"2020-08-09","objectID":"/2020/08/hugo-deployment-debugging/:4:4","tags":["折腾","网络"],"title":"Hugo部署与踩坑记","uri":"/2020/08/hugo-deployment-debugging/"},{"categories":["Tech"],"content":"总结 Hugo尽管只需要下载一个二进制文件即可开始部署和使用，但是在这过程中碰到的坑和解决问题的难度远超Hexo。如果我想不起来用WSL，那可能就完全和Hugo无缘。 这方面不得不说Hexo的功能性强得多，编译时自动转换CRLF/LF，并且不受到大小写的影响。除了在WSL下生成网页时真的很慢…… 看在Hugo有MemE这个颜值高、简洁还不容易撞车的主题面上饶了你了。 另外题图来自赤井はあと，回顾整个排查过程确实非常生草 以及哭笑不得 。 当然尽管折腾了那么多，建立博客的初衷还是写点东西下来你说是不是。 好好写点东西下来吧………………🤯 具体请参照《适用于Linux的Windows子系统安装指南》：https://docs.microsoft.com/zh-cn/windows/wsl/install-win10 ↩︎ 更多操作及详情，请查看MemE项目主页：https://github.com/reuixiy/hugo-theme-meme/blob/master/README.zh-cn.md ↩︎ ","date":"2020-08-09","objectID":"/2020/08/hugo-deployment-debugging/:5:0","tags":["折腾","网络"],"title":"Hugo部署与踩坑记","uri":"/2020/08/hugo-deployment-debugging/"},{"categories":["Life"],"content":"总算是毕业了，怎么说呢，准备好从一个火坑到一个火坑。 ","date":"2020-08-07","objectID":"/2020/08/master-graduation/:0:0","tags":["随笔"],"title":"毕业了","uri":"/2020/08/master-graduation/"},{"categories":["Life"],"content":"漫长的轮转 2017年到2020年一直在临床上轮转，某三甲医院的轮转计划是真的狠，从2017年8月1日到2020年7月31日用了个彻底，市里规定33个月的轮转硬给扩展到了36个月。 算了算各个科室轮转月数，心脏内科（5）、呼吸科（4）、消化科（4）、肾脏内科（2）、内分泌科（2）、麻醉科（2）、急诊科（2+1）、感染科（2）、风湿免疫科（2）、神经内科（2）、高血压科（2）、精神科（2）、血液科（2）、影像科（2）。 当然所有临床学的技能、学的知识全靠自己，哪来的老师给你一个个讲过去呢（苦笑）。倒是在很多同学抱怨单调、太累的麻醉科学到了很多东西。除了前两周在普外科房间做麻醉以外，剩下时间都在心外科麻醉台面工作，学习了气管插管、有创动脉监测、深静脉置管、右心漂浮导管置管、固定呼吸机及转运呼吸机的使用、大抢救，等等等等。以至于后面一个科室到ICU时被主任询问是否是外科出身，对不起，我是一个曾经想做外科的心内科医生…… ","date":"2020-08-07","objectID":"/2020/08/master-graduation/:1:0","tags":["随笔"],"title":"毕业了","uri":"/2020/08/master-graduation/"},{"categories":["Life"],"content":"疫情 今年年初还遇上了新冠疫情，要不是疫情最严重2月到3月窝在一个闲得要死的科室把毕业论文写完了，真不知道拿什么来毕业。当时在神经内科等等科室，因为回乡的轮转医生回不来，实习学生和进修医生无法来沪，于是我们这些最后坚守的轮转医生们每3-4日就是一个值班，忙得非常刻骨铭心了。 还有支援门急诊时都需要穿戴非常厚重的防护服，这对于我一个容易出汗的人来说简直是灾难，每天脱下来的衣服里全都是水。加之中央空调不能开，于是就得在寒冷和湿透了的内层之间挣扎………… 希望疫情能尽早结束。 ","date":"2020-08-07","objectID":"/2020/08/master-graduation/:2:0","tags":["随笔"],"title":"毕业了","uri":"/2020/08/master-graduation/"},{"categories":["Life"],"content":"挺多破事 轮转期间当然接触的最多的还是病人，现在医患关系那么紧张，挑一个讲讲吧。 当时在北院急诊台面轮转，从分诊台送来一个中年男性病人（以及好几个家属）。家属张口就是要给病人吸痰。 观察患者捂胸口，大汗淋漓，有咳嗽，呼吸急促，但尚不能确定问题所在。遂嘱平卧至检查床上，测量生命体征。单侧血压86/45 mmHg，对侧122/74 mmHg，四肢厥冷，单侧脉搏细弱，对侧脉搏搏动尚有力。考虑大动脉栓塞或主动脉夹层。 追问患者家属既往是否有心梗、主动脉夹层或相关血管疾病，患者家属矢口否认。翻阅门诊病历卡后发现2月前于外院确诊“主动脉夹层”，当时送入心脏外科监护室，由于当时检查考虑DeBakey II/Stanford A型，死亡率极高，建议手术。出于经济原因，患者要求回当地诊治（手术和监护费用粗算约20-40万不等，手术风险也非常高）。谁知患者仍然在沪工作，未回当地手术治疗。 当然要拖去做个CT，考虑到患者病情危重，生命体征不稳，于是没有做增强。 如图所示，蓝色箭头为主动脉夹层形成的假腔，由于病程长达2月，夹层已经可见钙化，无需造影剂也可以看见假腔。红色箭头是主动脉夹层破口，同样由于病程长达2月，加之血管条件差，破口反而并不是很大，但已经在往胸腔内出血了。单侧胸腔容积2500mL，人的全身血量也不过4000mL上下，可以解释为何又大汗淋漓及四肢厥冷的外周循环衰竭征象。 北院由于没有能力进行急诊心外科体外循环手术，告知患者家属病情危重及无法在北院进行手术后，决定签字后转院回当时确诊的医院。 ","date":"2020-08-07","objectID":"/2020/08/master-graduation/:3:0","tags":["随笔"],"title":"毕业了","uri":"/2020/08/master-graduation/"},{"categories":["Life"],"content":"顺利毕业 尽管有诸多的不如意和心惊胆战的时刻，总算还是完成了3年的轮转，拿到了学位证、学历证、医师执照、轮转证，顺利达成四证合一的目标。还努力考上了博士，集齐了三张入学通知书。 接下来就是面对博士生涯，还有今后的职业规划了。 ……一个火坑到另一个火坑，希望博士能顺利完成吧。 ","date":"2020-08-07","objectID":"/2020/08/master-graduation/:4:0","tags":["随笔"],"title":"毕业了","uri":"/2020/08/master-graduation/"},{"categories":["Life"],"content":"虽然说昨天就已经顺利建立了Hexo + NexT的博客，并且好不容易动手写完了久违的一篇博客，并且想写下一点点迷思。 ","date":"2020-08-05","objectID":"/2020/08/why-still-blogging/:0:0","tags":["随笔"],"title":"新博客的折腾与迷思","uri":"/2020/08/why-still-blogging/"},{"categories":["Life"],"content":"折腾 先说折腾吧。因为先前看到了Github Pages可以托管博客，于是在各种因素之下动心，然后间断拖了半个月把博客搭起来了。 一开始选择的Hexo，并且选了最大路的NexT主题（功能相当完善），不过在nodejs那巨大的modules面前非常头疼。查了资料后决定转投Hugo，并且在reuixiy大佬的博客发现了MemE这款主题（github项目地址），觉得Hugo轻量化且主题具备我所需要的功能，便在老马的指导下再次折腾了一下午。 于是新的博客就这么建好了。 08-05 22:40 更新：由于Hugo的奇怪Bug，导致部署后出现各种奇怪的css相关问题，且排查起来毫无头绪，遂决定暂时滚回到Hexo方案。 08-08 16:30 更新：通过WSL2解决了Hugo的部署问题，记录了一下相关踩坑记录。 ","date":"2020-08-05","objectID":"/2020/08/why-still-blogging/:1:0","tags":["随笔"],"title":"新博客的折腾与迷思","uri":"/2020/08/why-still-blogging/"},{"categories":["Life"],"content":"博客迷思 其实很久以前就用过博客（fc2、Wordpress、新浪博客 etc.），后来也经营过Lofter，不过除了Lofter以外都不算长久。fc2和Wordpress先后被墙，曾经用GoAgent、红杏等等想办法上去，但是最终因为线路问题难以为继。此外当时是高中，很难有时间持续写博客。即便是大学后开始经营的Lofter也遇到了很多麻烦。最初Lofter在Evan设想下是作为高品位的摄影社区推出的，后来因为Evan调走，新的社区运营把Lofter变成了二次元同人社区，原来的摄影社区氛围无以为继，便纷纷退出了。 顺带当时所在的摄影社团叫Chihato，主要组成人员实际上都是专业的摄影师。我这样玩票的进去也是非常意外了。 在SNS时代来临后自然是选择了Twitter、Google+、微博、微信朋友圈等进行记录。不必说，对于简体中文内容，大陆的平台看的人最多，传播力最广，作为代价，内容审查是逃不过去的，很多内容不敢也不能发布在国内平台上。而近几年来又要面对全新的一些问题：举报行为盛行。目前作为主流的低龄、低学历网民1看到不喜欢的内容都要一律举报让它消失。这个习惯的来源牵涉到方方面面，个人层面的党同伐异，以及平台的自我阉割、纵容和推波助澜当然是不可少的要素。 很多网民觉得出了微博就是避风港了，其实并不然，内容审查的问题只要是国内的注册公司都是跑不掉的。Lofter也吃下了当年自己种的恶果，目前大量同人作品遭到举报，并且审核力度加大，很多并无出格性描写的文章和图画遭到删除或屏蔽。当年我们都喜欢骂广电总局太过敏感，从人物发色、耳钉唇钉，一直管到意识形态，并且觉得在新一代成长后可以改善这样的问题。现在觉得完全就是想多了——我们的下一代比我们的上两代还要狠心。 鉴于目前国内的环境只会越来越差，文艺创作的空间也只会越来越小，自建博客可能是唯一的出路。所以自建博客的需求又回来了——把内容托管到国外VPS/Github Pages上，用轻量化傻瓜化的框架搭建博客，并且可以选择加密博客。最大的风险也就是域名被封。 然而就我这两天的折腾经验，Github Pages托管、Hexo/Hugo的部署与调整都是具有门槛的，都需要基本的coding能力，或者需要一位热心的程序员朋友，因此在推广上也产生了难度。 但无论如何，人类还是需要书写，需要创作的，希望大家都能找到合适的、安心的写作平台。 ","date":"2020-08-05","objectID":"/2020/08/why-still-blogging/:2:0","tags":["随笔"],"title":"新博客的折腾与迷思","uri":"/2020/08/why-still-blogging/"},{"categories":["Life"],"content":"共勉 我看见山和大海，也看见潮起潮落。 而你只能看见屋内的风景，感叹窗外的美好。 网民年龄及学历结构，占比最大的群体分别是“15-19岁”以及“初中学历”，详见第45次《中国互联网络发展状况统计报告》：http://www.cac.gov.cn/2020-04/27/c_1589535470378587.htm ↩︎ ","date":"2020-08-05","objectID":"/2020/08/why-still-blogging/:3:0","tags":["随笔"],"title":"新博客的折腾与迷思","uri":"/2020/08/why-still-blogging/"},{"categories":["Life"],"content":"终于是花了两三周时间把 对蒙忍 对马岛之鬼白金了。总体非常满意游戏的质量，而且本作可谓是PS4末期的诚意之作，觉得还是有必要稍稍简评。 ","date":"2020-08-04","objectID":"/2020/08/after-playing-ghost-of-tsushima/:0:0","tags":["PS4","游戏"],"title":"《对马岛之鬼》白金后简评","uri":"/2020/08/after-playing-ghost-of-tsushima/"},{"categories":["Life"],"content":"总体评分：9分 ","date":"2020-08-04","objectID":"/2020/08/after-playing-ghost-of-tsushima/:1:0","tags":["PS4","游戏"],"title":"《对马岛之鬼》白金后简评","uri":"/2020/08/after-playing-ghost-of-tsushima/"},{"categories":["Life"],"content":"剧情：7.5分 个人认为不功不过，叙事完整，起承转合都可以接受 至少不会没由头地对着重要人物来一发高尔夫球棒。从武士到战鬼的缘由、坚持战鬼之道及其后果，都讲得算是比较明确了。简要总结一下就是“一个理想主义者的死亡”，也侧面了反映骑士精神/武士道为何在火枪火炮面前毫无还手之力。 当然，剧情一股育碧味儿，查阅资料后发现确实是几位从育碧跳槽出来的编剧写的…… 还有，主线剧情的演出非常精彩，这点后面讲。 ","date":"2020-08-04","objectID":"/2020/08/after-playing-ghost-of-tsushima/:1:1","tags":["PS4","游戏"],"title":"《对马岛之鬼》白金后简评","uri":"/2020/08/after-playing-ghost-of-tsushima/"},{"categories":["Life"],"content":"演出：9分 这应该是本作最突出的特点了。从一开始就有选项选择黑泽明模式（高对比黑白+噪点），致敬大师和经典武士电影。从主线剧情人物的动作及表情，决斗前拔刀的镜头 还挺西部片的，再到每个故事开头的定格镜头，总的来说运镜水平以及画质渲染足以暴打大部分游戏了。牛逼疯了。 如果想要完整体验GoT的画质和运镜水平，建议用PS4 Pro+4K HDR显示器/电脑玩 或者等上PC体验极致画质。我只有初代PS4，只能输出1080p，比较可惜。 ","date":"2020-08-04","objectID":"/2020/08/after-playing-ghost-of-tsushima/:1:2","tags":["PS4","游戏"],"title":"《对马岛之鬼》白金后简评","uri":"/2020/08/after-playing-ghost-of-tsushima/"},{"categories":["Life"],"content":"操作：7分 操作应该时本游戏的短板，很多细节差点毁掉这款游戏。这并不是说笑，开门时过于贴近导致无法按R2开门、连续暗杀时因为前冲了一步导致判定为重攻击、骑马时对敌方的会心一击难以触发，还有攀登神社时绳钩经常勾不到……这些小毛小病导致在整个Gameplay过程中充满了各种各样的不爽感，如果不是杀阵演出真的很爽很流畅，那我可能会半路弃坑了。 在决斗时，挥刀的手感还算是不错的，弹反的判定在装了水神护符后松了很多，然而非常奇怪的是我几乎没用出过完美闪避，经常就变成滚地了……可能还需要多练习吧，普通难度通关基本靠弹反。 ","date":"2020-08-04","objectID":"/2020/08/after-playing-ghost-of-tsushima/:1:3","tags":["PS4","游戏"],"title":"《对马岛之鬼》白金后简评","uri":"/2020/08/after-playing-ghost-of-tsushima/"},{"categories":["Life"],"content":"地图与探索：8分 地图分为三个部分，随着收复主要城池开放，没有特别安排空气墙而是编排好地形来阻挡探索。狐狸巢、神社、温泉的分布总体比较合理，几个探索点之间的距离不会太夸张。此外在野外营救到被绑的百姓会逐渐把蒙古据点和占领的镇子标出来，在完成主线前就可以把大部分地图开完。 支线任务很多也是从流民营地对话接到的，而且据说是就近刷的，这样的机制也是挺不错的，至少揍到哪儿基本就可以探索到哪儿。 唯一比较不满的是探索收益偏低了一些，大部分都是给的资源；任务给的护符大部分都是重复的，仅有稻荷神社的两个护符可以随着探索增长。 ","date":"2020-08-04","objectID":"/2020/08/after-playing-ghost-of-tsushima/:1:4","tags":["PS4","游戏"],"title":"《对马岛之鬼》白金后简评","uri":"/2020/08/after-playing-ghost-of-tsushima/"},{"categories":["Life"],"content":"部分截图展示 ","date":"2020-08-04","objectID":"/2020/08/after-playing-ghost-of-tsushima/:2:0","tags":["PS4","游戏"],"title":"《对马岛之鬼》白金后简评","uri":"/2020/08/after-playing-ghost-of-tsushima/"},{"categories":["Life"],"content":"鸣谢 感谢老马 (twitter: @bgm38) 全程协助帮忙搭起这个小博客！ 另，本博客思考再三后决定不开放评论功能，如有疑问请邮件联系。 ","date":"2020-08-04","objectID":"/2020/08/after-playing-ghost-of-tsushima/:3:0","tags":["PS4","游戏"],"title":"《对马岛之鬼》白金后简评","uri":"/2020/08/after-playing-ghost-of-tsushima/"},{"categories":["Portfolio"],"content":"07: The Dreamer","date":"2019-02-14","objectID":"/2019/02/the-surreal-series-07/","tags":["Portfolio","The_Surreal_Series"],"title":"The Surreal Series 07: Dreamer","uri":"/2019/02/the-surreal-series-07/"},{"categories":["Portfolio"],"content":"06: The Unbalanced","date":"2016-07-15","objectID":"/2016/07/the-surreal-series-06/","tags":["Portfolio","The_Surreal_Series"],"title":"The Surreal Series 06: Unbalance","uri":"/2016/07/the-surreal-series-06/"},{"categories":["Portfolio"],"content":"02: Irodori Origami","date":"2016-05-05","objectID":"/2016/05/the-portrait-series-02/","tags":["Portfolio","The_Portrait"],"title":"The Portrait Series 02: Origami","uri":"/2016/05/the-portrait-series-02/"},{"categories":["Portfolio"],"content":"05: Awareness of Past","date":"2015-11-25","objectID":"/2015/11/the-surreal-series-05/","tags":["Portfolio","The_Surreal_Series"],"title":"The Surreal Series 05: Awareness","uri":"/2015/11/the-surreal-series-05/"},{"categories":["Portfolio"],"content":"04: Refusal to Herself","date":"2015-07-26","objectID":"/2015/07/the-surreal-series-04/","tags":["Portfolio","The_Surreal_Series"],"title":"The Surreal Series 04: Refusal","uri":"/2015/07/the-surreal-series-04/"},{"categories":["Portfolio"],"content":"03: Regret Regret Regret","date":"2015-03-29","objectID":"/2015/03/the-surreal-series-03/","tags":["Portfolio","The_Surreal_Series"],"title":"The Surreal Series 03: Regret","uri":"/2015/03/the-surreal-series-03/"},{"categories":["Portfolio"],"content":"01: Blossom in Snow","date":"2015-02-09","objectID":"/2015/02/the-portrait-series-01/","tags":["Portfolio"],"title":"The Portrait Series 01: Blossom","uri":"/2015/02/the-portrait-series-01/"},{"categories":["Portfolio"],"content":" Copyright © 2015 Aozaki, All rights reserved. ","date":"2015-02-09","objectID":"/2015/02/the-portrait-series-01/:0:0","tags":["Portfolio"],"title":"The Portrait Series 01: Blossom","uri":"/2015/02/the-portrait-series-01/"},{"categories":["Portfolio"],"content":"02: Funernal of Nobody","date":"2014-05-27","objectID":"/2014/05/the-surreal-series-02/","tags":["Portfolio","The_Surreal_Series"],"title":"The Surreal Series 02: Funernal","uri":"/2014/05/the-surreal-series-02/"},{"categories":["Portfolio"],"content":"01: Memorial for Minimalism","date":"2014-03-27","objectID":"/2014/03/the-surreal-series-01/","tags":["Portfolio","The_Surreal_Series"],"title":"The Surreal Series 01: Memorial","uri":"/2014/03/the-surreal-series-01/"}]